Magesh Kuppan

Schedule:
    Commence    : 9:30 AM
    Tea Break   : 11:00 AM (20 mins)
    Lunch Break : 1:00 PM (1 hr)
    Tea Break   : 3:30 PM (20 mins)
    Wind up     : 5:30 PM

Methodology:
    No powerpoints
    100% hands on driven
    At least 50% of the participants should have a completed the assignments 

Repository:
    https://github.com/tkmagesh/dell-go-aug-2022

Software Requirements:
    Go tools (https://go.dev/dl/)
    Visual Studio Code (https://code.visualstudio.com/)

Configuring Visual Studio Code for Go:   
    Ctrl + Shift + P
    Go: Install/Update tools
    Select all the tools and click 'Ok'


Why Go?
    1. lightweight
    2. Performance (on par with c++)
    3. Less resources during execution (go's concurrency model)
    4. Simplicity

    1. Simplicity
        25 keywords
        * no access modifiers (public, private, protected)
        * no classes (only structs)
        * no inheritance (only composition)
        * no exceptions (only errors)
        * no "try catch finally" blocks
        * no reference types (everything is a value type)
        * no pointer arithmetic 
        * no implicit type conversion

    2. lightweight
        * compiles to native code
        * no need for any app servers
        * Performance equivalent to c++

    3. Concurrency
        The ability to have more than one execution path in the application
        In linux, 2 MB of RAM to create a thread
        Concurrency is a language feature
            go keyword, channel (data type), <- (channel operator), select & range constructs
        SDK APIs - sync package, atomic package, runtime package



To run a go program
        go run <program_name.go>

    To create a build
        go build <program_name.go>
        go build -o <binary_name> <program_name>.go

        ./<program_name>
        OR
        <program_name>.exe

    To create a build for other platforms
    for ex: windows
    
        GOOS=windows GOARCH=386 go build <filename.go>
        GOOS=windows GOARCH=386 go build -o <build_filename> <filename.go>

    The list of other platform configurations can be found at :
        https://go.dev/doc/install/source#environment

    To change the default environment variables
        go env -w GOOS=linux GOARCH=amd64
        go build -o <build_filename> <filename.go>


Data types
    bool
    string

    int
    int8
    int16
    int32
    int64

    uint
    uint8
    uint16
    uint32
    uint64

    float32
    float64

    complex64 (real [float32] and imaginary [float32] parts)
    complex128 (real [float64] and imaginary [float64] parts)

    byte (alias for uint8)
    rune (alias for int32, unicode code point)

Variables
    Unused variables at the function scope are NOT allowed
    Unused constants at the function scope & package score are allowed
    Unused variables at the package scope are allowed

Programming Constructs

1. if else
2. switch case
3. for



Anonymous functions
Higher Order Functions
    functions are first class objects
        assign functions as values to variables
        pass functions as arguments to other functions
        return functions from other functions
Variadic functions
deferred functions

Collections
    Array
        fixed size collection of data of the same type

    Slice
        varying size collection of data of the same type
        
    Map
        Collection of key/value pairs


Before Go 1.13
    GOPATH
        pkg
        bin
        src
            github.com
                tkmagesh
                    my-app
                        app.go
                        main.go
                            import "github.com/tkmagesh/utils"
                    utils
                        utils.go

    Go 1.13
        Modules were introduced
        go.mod
            module name 
            dependencies
            targetted go runtime version

        A module can have any number of packages
            a package = folder

    To create a module file
        go mod init <module_name>
        ex:
            go mod init github.com/tkmagesh/my-app

    To run the module (app)
        go run .

    To create a build
        go build .

    To download a 3rd party package
        go get github.com/fatih/color

    To update the go.mod file
        go mod tidy

    To localize the dependencies
        go mod vendor
    
    Other mod commands
            go mod graph
            go mod why

    Module command reference
        https://go.dev/ref/mod



    